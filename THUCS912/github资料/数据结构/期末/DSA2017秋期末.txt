	by Zhengxiao Du
判断

底层排序的稳定性保证了radixsort的正确性和稳定性

用堆实现PFS时元素的深度只会减少不会增加

PFS时调用priorityUpdater至多O(e)次

左式堆A和B合并后右侧链的元素都来自A或B的右侧链

B树非叶节点的元素都有后继元素，且都在叶子节点中

数据是理想随机的时候即使M不是素数，除余法也能做到均匀

当输入是理想随机的时候堆的delMax的平均复杂度是O(1)，尽管最坏是O(logn)

BM算法仅仅使用bc表或者gs表，能够在最好情况下达到O(n/m)

选择
一次插入操作之后可能发生O(logn)次局部结构变化的树，选项AVL、红黑树、Splay，B树

一个初始时只有一个内部节点的10阶B树，经过9900次分裂和7888次合并，问可能的节点数。选项在2013、2015、2017、2018附近

当序列的长度超过内存的时候，哪种序列的shell排序速度最慢
选项是讲义里提到的四种shell排序序列

红鲤鱼与路鲤鱼与路的拼音（HongLiYuYuLuLiYuYuLu）的gs表中有几项互异项
选项3、5、7、以上都不对

5个互异节点组成的BST有多少种

长为2017的哈希表，使用单向平方试探，若在某次插入时无法找到空桶而必须扩容，此时哈希表中可能的数据个数有（不考虑正在插入的元素）
1005 1008 1013 1018

同13年期末最后一道大题，希尔序列的改进，取到偶数+1或者取到偶数-1哪种能必然避免O(n^2)的最坏情况，或者都能或者都不能

第一道大题

给了一种数据结构DEPQ（双端优先队列），空间上是线性，能够O(1)的时间获得序列的最大值最小值，O(logn)的时间delMin、delMax、insert
1.如果序列的长度超过了内存，请利用这种数据结构借鉴快速划分策略给出一种排序算法

2.如果总序列长度是1TB，内存是2GB，IO页面是4KB，单次比较操作、内存读取的时间是t，IO延时是2^17t，请估计你的算法在最好最坏的情况下的时间

3.请给出一些改进平均性能的策略

第二道大题
给了一种DEPQ的实现SMMH，其实就是维护了三条性质的完全二叉树（根节点不储存数据）：
1.同一节点的左孩子始终小于等于右孩子
2.如果一个节点是左孩子，那么他应该小于等于它的左孩子和左侄子（右兄弟的左孩子）
3.如果一个节点是右孩子，那么他应该大于等于它的右孩子和右侄子（左兄弟的右孩子）
可以看出根节点的左右孩子分别是全局最小最大节点

提供了insert和delMin的代码
第一问说明一下insert的方法。第二问给了一个insert的实例写一下结果。
第三问说明一下delMin，第四问自己实现一下delMax